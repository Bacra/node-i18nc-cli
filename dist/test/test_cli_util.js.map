{"version":3,"sources":["../../src/test/test_cli_util.js"],"names":["Promise","require","fs","promisifyAll","mkdirp","promisify","rimraf","path","expect","cliUtil","autoTestUtils","INPUT_PATH","__dirname","TMP_PATH","describe","inputDir","realpathSync","it","scanFileList","then","data","to","eql","type","normalize","fail","err","code","be","message","sort","outputDir","inputFile","before","writeFileAsync","getWriteOneFilePath","rfile","file2i18nc","json","toJSON","otherJson","requireAfterWrite"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Promise       = require('bluebird');\nvar fs            = Promise.promisifyAll(require('fs'));\nvar mkdirp        = Promise.promisify(require('mkdirp'));\nvar rimraf        = Promise.promisify(require('rimraf'));\nvar path          = require('path');\nvar expect        = require('expect.js');\nvar cliUtil       = require('../bin/cli_util');\nvar autoTestUtils = require('./auto_test_utils');\nvar INPUT_PATH = __dirname+'/../../test/input/';\nvar TMP_PATH = __dirname+'/../../test/tmp/';\n\n\ndescribe('#cli_util', function()\n{\n\tdescribe('#scanFileList', function()\n\t{\n\t\tvar inputDir = fs.realpathSync(INPUT_PATH+'scan_dir/')+'/';\n\n\t\tdescribe('#no_recurse', function()\n\t\t{\n\t\t\tit('#file', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'root.file')\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(data).to.eql(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'one',\n\t\t\t\t\t\t\t\tdata: path.normalize(inputDir+'root.file')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#not_exists', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'not_exists')\n\t\t\t\t\t.then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\texpect().fail();\n\t\t\t\t\t},\n\t\t\t\t\tfunction(err)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(err.code).to.be('ENOENT');\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#dir', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir)\n\t\t\t\t\t.then(function()\n\t\t\t\t\t{\n\t\t\t\t\t\texpect().fail();\n\t\t\t\t\t},\n\t\t\t\t\tfunction(err)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(err.message).to.be('Input Is A Directory');\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#dir *.file', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'*.file')\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(data).to.eql(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\t\tdata: [path.normalize(inputDir+'root.file')]\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\n\t\tdescribe('#recurse', function()\n\t\t{\n\t\t\tit('#file', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'root.file', true)\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(data).to.eql(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'one',\n\t\t\t\t\t\t\t\tdata: path.normalize(inputDir+'root.file')\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#not_exists', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'not_exists', true)\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(data).to.eql({type: 'list', data: []});\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#dir', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir, true)\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\tdata.data = data.data.sort();\n\t\t\t\t\t\texpect(data).to.eql(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\t\t\tdata:\n\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\tpath.normalize(inputDir+'root.file'),\n\t\t\t\t\t\t\t\t\tpath.normalize(inputDir+'child_dir/child1.file'),\n\t\t\t\t\t\t\t\t\tpath.normalize(inputDir+'child_dir/child2.file')\n\t\t\t\t\t\t\t\t].sort()\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\tit('#dir *.file', function()\n\t\t\t{\n\t\t\t\treturn cliUtil.scanFileList(inputDir+'*.file', true)\n\t\t\t\t\t.then(function(data)\n\t\t\t\t\t{\n\t\t\t\t\t\texpect(data).to.eql(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttype: 'list',\n\t\t\t\t\t\t\tdata: [path.normalize(inputDir+'root.file')]\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t});\n\t\t});\n\t});\n\n\n\tdescribe('#getWriteOneFilePath', function()\n\t{\n\t\tvar outputDir = TMP_PATH+'getWriteOneFilePath/';\n\t\tvar inputFile = INPUT_PATH+'input.file';\n\n\t\tbefore(function()\n\t\t{\n\t\t\treturn mkdirp(outputDir)\n\t\t\t\t.then(function()\n\t\t\t\t{\n\t\t\t\t\treturn rimraf(outputDir);\n\t\t\t\t})\n\t\t\t\t.then(function()\n\t\t\t\t{\n\t\t\t\t\treturn mkdirp(outputDir);\n\t\t\t\t})\n\t\t\t\t.then(function()\n\t\t\t\t{\n\t\t\t\t\treturn fs.writeFileAsync(outputDir+'prev.file', '');\n\t\t\t\t});\n\t\t});\n\n\t\tit('#file', function()\n\t\t{\n\t\t\treturn cliUtil.getWriteOneFilePath(outputDir+'prev.file', inputFile)\n\t\t\t\t.then(function(rfile)\n\t\t\t\t{\n\t\t\t\t\texpect(path.normalize(rfile)).to.be(path.normalize(outputDir+'prev.file'));\n\t\t\t\t});\n\t\t});\n\n\t\tit('#dir', function()\n\t\t{\n\t\t\treturn cliUtil.getWriteOneFilePath(outputDir, inputFile)\n\t\t\t\t.then(function(rfile)\n\t\t\t\t{\n\t\t\t\t\texpect(path.normalize(rfile)).to.be(path.normalize(outputDir+'input.file'));\n\t\t\t\t});\n\t\t});\n\n\t\tit('#not exists file', function()\n\t\t{\n\t\t\treturn cliUtil.getWriteOneFilePath(outputDir+'not_exists.file', inputFile)\n\t\t\t\t.then(function(rfile)\n\t\t\t\t{\n\t\t\t\t\texpect(path.normalize(rfile)).to.be(path.normalize(outputDir+'not_exists.file'));\n\t\t\t\t});\n\t\t});\n\n\t\tit('#not exists path', function()\n\t\t{\n\t\t\treturn cliUtil.getWriteOneFilePath(outputDir+'not_exists.dir/', inputFile)\n\t\t\t\t.then(function(rfile)\n\t\t\t\t{\n\t\t\t\t\texpect(path.normalize(rfile)).to.be(path.normalize(outputDir+'not_exists.dir/input.file'));\n\t\t\t\t});\n\t\t});\n\t});\n\n\n\tdescribe('#file2i18nc', function()\n\t{\n\t\tit('#base', function()\n\t\t{\n\t\t\treturn cliUtil.file2i18nc(INPUT_PATH+'example.js')\n\t\t\t\t.then(function(data)\n\t\t\t\t{\n\t\t\t\t\tvar json = data.toJSON();\n\t\t\t\t\tdelete json.code;\n\t\t\t\t\tvar otherJson = autoTestUtils.requireAfterWrite('file2i18nc.json', json);\n\t\t\t\t\texpect(json).to.eql(otherJson);\n\t\t\t\t});\n\t\t});\n\t});\n\n});\n"],"file":"test_cli_util.js"}