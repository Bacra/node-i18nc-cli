{"version":3,"sources":["../../src/test/auto_test_utils.js"],"names":["Promise","require","fs","promisifyAll","expect","testReq","ROOT_PATH","__dirname","exports","requireAfterWrite","code2arr","diffFiles","input","output","filename","all","readFileAsync","encoding","then","arr","to","eql"],"mappings":"AAAA;;AAEA,IAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,IAAMC,EAAE,GAAGF,OAAO,CAACG,YAAR,CAAqBF,OAAO,CAAC,IAAD,CAA5B,CAAX;;AACA,IAAMG,MAAM,GAAGH,OAAO,CAAC,WAAD,CAAtB;;AACA,IAAMI,OAAO,GAAGJ,OAAO,CAAC,gBAAD,CAAvB;;AACAI,OAAO,CAACC,SAAR,GAAoBC,SAAS,GAAC,4BAA9B;AAGAC,OAAO,CAACC,iBAAR,GAA4BJ,OAA5B;AACAG,OAAO,CAACE,QAAR,GAAmBL,OAAO,CAACK,QAA3B;;AAEAF,OAAO,CAACG,SAAR,GAAoB,SAASA,SAAT,CAAmBC,KAAnB,EAA0BC,MAA1B,EACpB;AACC,SAAO,UAASC,QAAT,EACP;AACC,WAAOd,OAAO,CAACe,GAAR,CACN,CACCb,EAAE,CAACc,aAAH,CAAiBJ,KAAK,GAAC,GAAN,GAAUE,QAA3B,EAAqC;AAACG,MAAAA,QAAQ,EAAE;AAAX,KAArC,CADD,EAECf,EAAE,CAACc,aAAH,CAAiBH,MAAM,GAAC,GAAP,GAAWC,QAA5B,EAAsC;AAACG,MAAAA,QAAQ,EAAE;AAAX,KAAtC,CAFD,CADM,EAKLC,IALK,CAKA,UAASC,GAAT,EACN;AACCf,MAAAA,MAAM,CAACI,OAAO,CAACE,QAAR,CAAiBS,GAAG,CAAC,CAAD,CAApB,CAAD,CAAN,CAAiCC,EAAjC,CAAoCC,GAApC,CAAwCb,OAAO,CAACE,QAAR,CAAiBS,GAAG,CAAC,CAAD,CAApB,CAAxC;AACA,KARK,CAAP;AASA,GAXD;AAYA,CAdD","sourcesContent":["'use strict';\n\nconst Promise = require('bluebird');\nconst fs = Promise.promisifyAll(require('fs'));\nconst expect = require('expect.js');\nconst testReq = require('i18nc-test-req');\ntestReq.ROOT_PATH = __dirname+'/../../global/test/output/';\n\n\nexports.requireAfterWrite = testReq;\nexports.code2arr = testReq.code2arr;\n\nexports.diffFiles = function diffFiles(input, output)\n{\n\treturn function(filename)\n\t{\n\t\treturn Promise.all(\n\t\t\t[\n\t\t\t\tfs.readFileAsync(input+'/'+filename, {encoding: 'utf8'}),\n\t\t\t\tfs.readFileAsync(output+'/'+filename, {encoding: 'utf8'})\n\t\t\t])\n\t\t\t.then(function(arr)\n\t\t\t{\n\t\t\t\texpect(exports.code2arr(arr[1])).to.eql(exports.code2arr(arr[0]));\n\t\t\t});\n\t}\n}\n"],"file":"auto_test_utils.js"}