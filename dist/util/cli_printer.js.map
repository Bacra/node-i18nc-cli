{"version":3,"sources":["../../src/util/cli_printer.js"],"names":["_","require","table","chalk","EMPTY_SYMBOL","exports","colors","constructor","defaultTableOptions","border","getBorderCharacters","columnDefault","paddingLeft","paddingRight","drawHorizontalLine","printDirtyAndNewWords","dirtyWords","newlist","list","_getNewWordsTableListData","push","apply","_getDirtyWordsTableListData","sort","a","b","ast","range","_printWordListTable","printDirtyWords","printNewWords","printRefs","info","emptySymbol","gray","mainTableData","type","fileKey","subtype","joinIndexs","join","subkeys","Object","keys","length","each","val","key","_printTable","alignment","map","item","originalAst","loc","getAstLocStr","value","code","reason","translateWords","firstColumnStyle","yellow","filter","arr","trim","tableOptions","extend","columns","default","start","line","column"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _            = require('lodash');\nvar table        = require('table');\nvar chalk        = require('chalk');\nvar EMPTY_SYMBOL = '(empty)';\nexports.colors   = new chalk.constructor();\n\nexports.defaultTableOptions =\n{\n\tborder: table.getBorderCharacters('void'),\n\tcolumnDefault:\n\t{\n\t\tpaddingLeft  : 1,\n\t\tpaddingRight : 1\n\t},\n\tdrawHorizontalLine: function()\n\t{\n\t\treturn 0;\n\t}\n};\n\nexports.printDirtyAndNewWords = printDirtyAndNewWords;\nfunction printDirtyAndNewWords(dirtyWords, newlist, paddingLeft)\n{\n\tvar list = _getNewWordsTableListData(newlist, true);\n\tlist.push.apply(list, _getDirtyWordsTableListData(dirtyWords));\n\tlist.sort(function(a, b)\n\t{\n\t\treturn a.ast.range[0] > b.ast.range[0] ? 1 : -1;\n\t});\n\n\treturn _printWordListTable(list,\n\t\t{\n\t\t\tpaddingLeft: paddingLeft || 1\n\t\t});\n}\n\n\nexports.printDirtyWords = printDirtyWords;\nfunction printDirtyWords(dirtyWords, paddingLeft)\n{\n\tvar list = _getDirtyWordsTableListData(dirtyWords);\n\n\treturn _printWordListTable(list,\n\t\t{\n\t\t\tpaddingLeft: paddingLeft || 1\n\t\t});\n}\n\n\nexports.printNewWords = printNewWords;\nfunction printNewWords(newlist, paddingLeft)\n{\n\tvar list = _getNewWordsTableListData(newlist);\n\n\treturn _printWordListTable(list,\n\t\t{\n\t\t\tpaddingLeft: paddingLeft || 1\n\t\t});\n}\n\nexports.printRefs = printRefs;\nfunction printRefs(info, paddingLeft)\n{\n\tvar emptySymbol = exports.colors.gray(EMPTY_SYMBOL);\n\tvar mainTableData =\n\t[\n\t\t[exports.colors.gray('type'), ''+info.type],\n\t\t[exports.colors.gray('fileKey'), info.fileKey || emptySymbol],\n\t\t[exports.colors.gray('subtype'), info.subtype || emptySymbol],\n\t\t[exports.colors.gray('joinIndexs'), info.joinIndexs && info.joinIndexs.join(',') || emptySymbol]\n\t];\n\n\tif (info.subkeys && Object.keys(info.subkeys).length)\n\t{\n\t\tmainTableData.push(['', ' ']);\n\t\tmainTableData.push([exports.colors.gray('subkeys'), exports.colors.gray('index')]);\n\t\t_.each(info.subkeys, function(val, key)\n\t\t{\n\t\t\tmainTableData.push([val, key]);\n\t\t});\n\t}\n\telse\n\t{\n\t\tmainTableData.push([exports.colors.gray('subkeys'), emptySymbol]);\n\t}\n\n\treturn _printTable(mainTableData,\n\t\t{\n\t\t\talignment   : 'right',\n\t\t\tpaddingLeft : paddingLeft || 1\n\t\t});\n}\n\n\nfunction _getDirtyWordsTableListData(dirtyWords)\n{\n\tvar list = dirtyWords.list.map(function(item)\n\t{\n\t\tvar ast = item.originalAst;\n\n\t\treturn {\n\t\t\tast    : ast,\n\t\t\tloc    : getAstLocStr(ast),\n\t\t\tvalue  : item.code,\n\t\t\treason : item.reason\n\t\t};\n\t});\n\n\treturn list;\n}\n\nfunction _getNewWordsTableListData(newlist, reason)\n{\n\tvar list = newlist.map(function(item)\n\t{\n\t\tvar ast = item.originalAst;\n\t\treturn {\n\t\t\tast    : ast,\n\t\t\tloc    : getAstLocStr(ast),\n\t\t\tvalue  : item.translateWords.join(','),\n\t\t\treason : reason ? 'Words are not wrapped' : null,\n\t\t};\n\t});\n\n\treturn list;\n}\n\n\nfunction _printWordListTable(list, firstColumnStyle)\n{\n\tvar mainTableData = list.map(function(item)\n\t\t{\n\t\t\treturn [\n\t\t\t\titem.loc ? exports.colors.gray(item.loc) : ' ',\n\t\t\t\titem.value ? exports.colors.yellow(item.value) : ' ',\n\t\t\t\titem.reason || ' '\n\t\t\t];\n\t\t})\n\t\t.filter(function(arr)\n\t\t{\n\t\t\treturn arr.join('').trim();\n\t\t});\n\n\treturn _printTable(mainTableData, firstColumnStyle);\n}\n\nfunction _printTable(mainTableData, firstColumnStyle)\n{\n\tvar tableOptions = _.extend({}, exports.defaultTableOptions,\n\t\t{\n\t\t\tcolumns:\n\t\t\t{\n\t\t\t\t0: firstColumnStyle,\n\t\t\t},\n\t\t});\n\n\tif (table.table)\n\t\treturn table.table(mainTableData, tableOptions);\n\telse\n\t\treturn table.default(mainTableData, tableOptions);\n}\n\n\nexports.getAstLocStr = getAstLocStr;\nfunction getAstLocStr(ast)\n{\n\tif (ast && ast.loc)\n\t\treturn 'Loc:'+ast.loc.start.line+','+ast.loc.start.column;\n\telse\n\t\treturn '';\n}\n"],"file":"cli_printer.js"}