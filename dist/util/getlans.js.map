{"version":3,"sources":["../../src/util/getlans.js"],"names":["_","require","testExports","exports","_test","req","curlans","lansHeader","headers","uniq","_getReqLan","req4cn","_getReqLan4cn","filter","lans","onlyList","onlyLansList","onlyPrevList","forEach","name","length","indexOf","push","split","lanstr","toLowerCase","map","item","index","arr","q","qval","substr","val","sort","a","b","some","needCHT","needEn","chtFirst","prevKey"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('lodash');\nvar testExports = (exports._test = {});\n\nexports.req = function(req, curlans)\n{\n\tvar lansHeader = req.headers['accept-language'];\n\treturn lansHeader && _.uniq(_getReqLan(lansHeader, curlans)) || [];\n};\n\nexports.req4cn = function(req)\n{\n\tvar lansHeader = req.headers['accept-language'];\n\treturn lansHeader && _.uniq(_getReqLan4cn(lansHeader)) || [];\n};\n\nexports.filter = function(lans, onlyList)\n{\n\tvar onlyLansList = [];\n\tvar onlyPrevList = [];\n\n\tonlyList.forEach(function(name)\n\t{\n\t\tif (name.length == 2 || name.indexOf('-') == -1)\n\t\t{\n\t\t\tonlyPrevList.push(name);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tonlyLansList.push(name);\n\t\t}\n\t});\n\n\tif (!onlyLansList.length) onlyLansList = null;\n\tif (!onlyPrevList.length) onlyPrevList = null;\n\n\treturn lans.filter(function(name)\n\t{\n\t\treturn (onlyLansList && onlyLansList.indexOf(name) != -1)\n\t\t\t|| (onlyPrevList && onlyPrevList.indexOf(name.split('-')[0]) != -1);\n\t});\n};\n\n\ntestExports._getReqLan = _getReqLan;\nfunction _getReqLan(lansHeader, curlans)\n{\n\tvar lanstr = [];\n\tlansHeader.toLowerCase().split(',')\n\t\t.map(function(item, index)\n\t\t{\n\t\t\tvar arr = item.split(';');\n\t\t\tvar q = arr[1];\n\t\t\tvar qval = q && q.substr(0, 2) == 'q=' && +q.substr(2);\n\n\t\t\treturn {\n\t\t\t\tval\t\t: arr[0],\n\t\t\t\tq\t\t: qval,\n\t\t\t\tindex\t: index\n\t\t\t};\n\t\t})\n\t\t.sort(function(a, b)\n\t\t{\n\t\t\tif (!a.q && !b.q) return a.index > b.index ? -1 : 1;\n\t\t\tif (!a.q) return -1;\n\t\t\tif (!b.q) return 1;\n\n\t\t\tif (a.q == b.q) return a.index > b.index ? -1 : 1;\n\n\t\t\treturn a.q > b.q ? -1 : 1;\n\t\t})\n\t\t.some(function(item)\n\t\t{\n\t\t\tvar val = item.val;\n\t\t\tif (curlans.indexOf(val) != -1) return true;\n\t\t\tlanstr.push(val);\n\t\t});\n\n\treturn lanstr;\n}\n\n\ntestExports._getReqLan4cn = _getReqLan4cn;\nfunction _getReqLan4cn(lansHeader)\n{\n\tvar lans = _getReqLan(lansHeader, ['zh-cn', 'zh']);\n\n\tif (lans.length)\n\t{\n\t\tvar needCHT = false;\n\t\tvar needEn = false;\n\t\tvar chtFirst = true;\n\t\tlans.some(function(name)\n\t\t{\n\t\t\tif (name == 'zh-cn') return;\n\n\t\t\tif (name.length == 2)\n\t\t\t{\n\t\t\t\tif (name == 'en') needEn = false;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tvar prevKey = name.substr(0, 3);\n\t\t\t\tif (prevKey == 'en-')\n\t\t\t\t{\n\t\t\t\t\tneedEn = true;\n\t\t\t\t\tchtFirst = needCHT;\n\t\t\t\t}\n\t\t\t\telse if (prevKey == 'zh-')\n\t\t\t\t{\n\t\t\t\t\tneedCHT = true;\n\t\t\t\t\tchtFirst = !needEn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (needCHT && chtFirst) lans.push('cht');\n\t\tif (needEn) lans.push('en');\n\t\tif (needCHT && !chtFirst) lans.push('cht');\n\t}\n\n\treturn lans;\n}\n"],"file":"getlans.js"}