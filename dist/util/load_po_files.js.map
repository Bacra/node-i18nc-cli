{"version":3,"sources":["../../src/util/load_po_files.js"],"names":["Promise","require","fs","promisifyAll","glob","debug","i18ncPO","stripBOM","extend","globAsync","promisify","exports","autoLoadPOFiles","loadPOFiles","loadPOFile","autoLoadPOFilesSync","loadPOFilesSync","loadPOFileSync","input","statAsync","stats","isFile","isDirectory","Error","inputDir","cwd","nodir","absolute","files","map","file","concurrency","arr","unshift","apply","readFileAsync","encoding","content","parse","statSync","sync","readFileSync"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Promise   = require('bluebird');\nconst fs        = Promise.promisifyAll(require('fs'));\nconst glob      = require('glob');\nconst debug     = require('debug')('i18nc:load_po_files');\nconst i18ncPO   = require('i18nc-po');\nconst stripBOM  = require('strip-bom');\nconst extend    = require('extend');\nconst globAsync = Promise.promisify(glob);\n\nexports.autoLoadPOFiles = autoLoadPOFiles;\nexports.loadPOFiles = loadPOFiles;\nexports.loadPOFile = loadPOFile;\n\nexports.autoLoadPOFilesSync = autoLoadPOFilesSync;\nexports.loadPOFilesSync = loadPOFilesSync;\nexports.loadPOFileSync = loadPOFileSync;\n\nasync function autoLoadPOFiles(input)\n{\n\tlet stats = await fs.statAsync(input);\n\n\tif (stats.isFile())\n\t\treturn loadPOFile(input);\n\telse if (stats.isDirectory())\n\t\treturn loadPOFiles(input);\n\telse\n\t\tthrow new Error('Input Is Not File Or Directory');\n}\n\n/**\n * 从po文件中读取dbTranslateWords结构体\n */\nasync function loadPOFiles(inputDir)\n{\n\tdebug('sacn dir:%s', inputDir);\n\n\tlet files = await globAsync('**/*.po', {cwd: inputDir, nodir: true, absolute: true})\n\tlet arr = await Promise.map(files, function(file)\n\t\t{\n\t\t\tdebug('load po file:%s', file);\n\t\t\treturn loadPOFile(file);\n\t\t},\n\t\t{\n\t\t\tconcurrency: 5\n\t\t});\n\n\tarr.unshift(true);\n\treturn extend.apply(null, arr);\n}\n\nasync function loadPOFile(file)\n{\n\tlet content = await fs.readFileAsync(file, {encoding: 'utf8'});\n\n\tcontent = stripBOM(content);\n\treturn i18ncPO.parse(content);\n}\n\n\n\nfunction autoLoadPOFilesSync(input)\n{\n\tlet stats = fs.statSync(input);\n\n\tif (stats.isFile())\n\t\treturn loadPOFileSync(input);\n\telse if (stats.isDirectory())\n\t\treturn loadPOFilesSync(input);\n\telse\n\t\tthrow new Error('Input Is Not File Or Directory');\n}\n\n/**\n * 从po文件中读取dbTranslateWords结构体\n */\nfunction loadPOFilesSync(inputDir)\n{\n\tdebug('sacn dir:%s', inputDir);\n\tlet files = glob.sync('**/*.po', {cwd: inputDir, nodir: true, absolute: true});\n\tlet arr = files.map(loadPOFileSync);\n\tarr.unshift(true);\n\treturn extend.apply(null, arr);\n}\n\nfunction loadPOFileSync(file)\n{\n\tlet content = fs.readFileSync(file, {encoding: 'utf8'});\n\tcontent = stripBOM(content);\n\treturn i18ncPO.parse(content);\n}\n"],"file":"load_po_files.js"}