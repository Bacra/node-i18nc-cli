{"version":3,"sources":["../../../src/bin/actions/code.js"],"names":["Promise","require","debug","fs","promisifyAll","mkdirp","promisify","path","extend","cliUtil","i18ncUtil","module","exports","input","output","options","translateDBFile","resolve","readTranslateDBFilePromise","readFileAsync","encoding","then","data","JSON","parse","allfiledata","all","scanFileList","isRecurse","inputPOFile","loadPOFile","inputPODir","autoLoadPOFiles","fileInfo","dbTranslateWords","myOptions","I18NHandlerName","I18NHandlerAlias","ignoreScanHandlerNames","codeModifyItems","I18NHandler","onlyTheseLanguages","style","minFuncCode","minTranslateFuncCode","upgrade","partial","isPartialUpdate","insert","checkClosure","isCheckClosureForNewI18NHandler","type","map","file","file2i18nc","code","isOnlyCheck","wfile","writeFile","console","log","concurrency","getWriteOneFilePath","writeFileAsync","outputWordFile","writeOutputWordFilePromise","stringify","outputPODir","mulitResult2POFiles","pickFileLanguages","content","dirname"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Promise   = require('bluebird');\nconst debug     = require('debug')('i18nc');\nconst fs        = Promise.promisifyAll(require('fs'));\nconst mkdirp    = Promise.promisify(require('mkdirp'));\nconst path      = require('path');\nconst extend    = require('extend');\nconst cliUtil   = require('../cli_util');\nconst i18ncUtil = require('../../util/index');\n\n\nmodule.exports = async function code(input, output, options)\n{\n\tlet translateDBFile = options.translateDBFile;\n\tlet readTranslateDBFilePromise;\n\n\tif (translateDBFile)\n\t{\n\t\ttranslateDBFile = path.resolve(translateDBFile);\n\t\tdebug('read translateDBFile:%s', translateDBFile);\n\n\t\treadTranslateDBFilePromise = fs.readFileAsync(translateDBFile,\n\t\t\t{\n\t\t\t\tencoding: 'utf8'\n\t\t\t})\n\t\t\t.then(function(data)\n\t\t\t{\n\t\t\t\treturn JSON.parse(data);\n\t\t\t});\n\t}\n\n\tlet allfiledata = {};\n\tlet data = await Promise.all(\n\t\t[\n\t\t\tcliUtil.scanFileList(path.resolve(input), null, options.isRecurse),\n\t\t\treadTranslateDBFilePromise,\n\t\t\toptions.inputPOFile && i18ncUtil.loadPOFile(path.resolve(options.inputPOFile)),\n\t\t\toptions.inputPODir && i18ncUtil.autoLoadPOFiles(path.resolve(options.inputPODir))\n\t\t]);\n\tlet fileInfo = data[0];\n\tlet dbTranslateWords = extend(true, {}, data[2], data[3], data[1]);\n\tlet myOptions =\n\t{\n\t\tdbTranslateWords       : dbTranslateWords,\n\t\tI18NHandlerName        : options.I18NHandlerName,\n\t\tI18NHandlerAlias       : options.I18NHandlerAlias,\n\t\tignoreScanHandlerNames : options.ignoreScanHandlerNames,\n\t\tcodeModifyItems        : options.codeModifyItems,\n\t\tI18NHandler:\n\t\t{\n\t\t\tdata: {onlyTheseLanguages: options.onlyTheseLanguages},\n\t\t\tstyle: {minFuncCode: options.minTranslateFuncCode},\n\t\t\tupgrade: {partial: options.isPartialUpdate},\n\t\t\tinsert:\n\t\t\t{\n\t\t\t\tcheckClosure: options.isCheckClosureForNewI18NHandler,\n\t\t\t},\n\t\t}\n\t};\n\n\tif (fileInfo.type == 'list')\n\t{\n\t\tawait Promise.map(fileInfo.data, async function(file)\n\t\t\t{\n\t\t\t\tdebug('i18n file start: %s', file);\n\n\t\t\t\tlet data = await cliUtil.file2i18nc(file, myOptions)\n\t\t\t\tlet code = data.code;\n\t\t\t\tdelete data.code;\n\t\t\t\tallfiledata[file] = data;\n\t\t\t\tif (options.isOnlyCheck) return;\n\n\t\t\t\tlet wfile = path.resolve(output, file);\n\t\t\t\tdebug('writefile: %s', wfile);\n\n\t\t\t\tawait writeFile(wfile, code)\n\t\t\t\tconsole.log('write file: '+wfile);\n\t\t\t},\n\t\t\t{\n\t\t\t\tconcurrency: 5\n\t\t\t});\n\t}\n\telse\n\t{\n\t\tlet file = fileInfo.data;\n\t\tdebug('one file mod:%s', file);\n\n\t\tlet data = await cliUtil.file2i18nc(file, myOptions);\n\t\tlet code = data.code;\n\t\tdelete data.code;\n\n\t\tallfiledata[file] = data;\n\t\tif (options.isOnlyCheck) return;\n\n\t\tlet wfile = path.resolve(output);\n\t\tdebug('writefile: %s', wfile);\n\n\t\twfile = await cliUtil.getWriteOneFilePath(wfile, file);\n\t\tawait fs.writeFileAsync(wfile, code);\n\t\tconsole.log('write file: '+wfile);\n\t}\n\t// 如果仅仅检查，则不处理写的逻辑\n\tif (options.isOnlyCheck) return;\n\n\tlet outputWordFile = options.outputWordFile;\n\tlet writeOutputWordFilePromise;\n\tif (outputWordFile)\n\t{\n\t\toutputWordFile = path.resolve(outputWordFile);\n\t\twriteOutputWordFilePromise = writeFile(outputWordFile, JSON.stringify(allfiledata, null, '\\t'))\n\t\t\t.then(function()\n\t\t\t{\n\t\t\t\tconsole.log('write words file: '+outputWordFile);\n\t\t\t});\n\t}\n\n\tlet outputPODir = options.outputPODir;\n\tif (outputPODir) outputPODir = path.resolve(outputPODir);\n\n\tawait Promise.all(\n\t\t[\n\t\t\twriteOutputWordFilePromise,\n\t\t\toutputPODir && i18ncUtil.mulitResult2POFiles(allfiledata, outputPODir,\n\t\t\t\t{\n\t\t\t\t\tpickFileLanguages: options.pickFileLanguages\n\t\t\t\t})\n\t\t]);\n}\n\n\nasync function writeFile(file, content)\n{\n\tawait mkdirp(path.dirname(file));\n\treturn await fs.writeFileAsync(file, content);\n}\n"],"file":"code.js"}