{"version":3,"sources":["../../../src/bin/actions/check-wrap.js"],"names":["Promise","require","path","debug","cliUtil","cliPrinter","module","exports","checkWrap","input","options","scanFileList","resolve","isRecurse","then","fileInfo","myOptions","I18NHandlerName","I18NHandlerAlias","ignoreScanHandlerNames","codeModifyItems","I18NHandler","data","onlyTheseLanguages","style","minFuncCode","minTranslateFuncCode","insert","checkClosure","isCheckClosureForNewI18NHandler","files","type","map","file","file2i18nc","result","newlist","allCodeTranslateWords","list4newWordAsts","dirtyWords","allDirtyWords","concurrency","results","forEach","_printResult","item","length","list","console","log","colors","green","red","output","printDirtyAndNewWords"],"mappings":"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","sourcesContent":["'use strict';\n\nconst Promise    = require('bluebird');\nconst path       = require('path');\nconst debug      = require('debug')('i18nc:check');\nconst cliUtil    = require('../cli_util');\nconst cliPrinter = require('../../util/cli_printer');\n\nmodule.exports = function checkWrap(input, options)\n{\n\treturn cliUtil.scanFileList(path.resolve(input), options.isRecurse)\n\t\t.then(function(fileInfo)\n\t\t{\n\t\t\tlet myOptions =\n\t\t\t{\n\t\t\t\tI18NHandlerName        : options.I18NHandlerName,\n\t\t\t\tI18NHandlerAlias       : options.I18NHandlerAlias,\n\t\t\t\tignoreScanHandlerNames : options.ignoreScanHandlerNames,\n\t\t\t\tcodeModifyItems        : options.codeModifyItems,\n\t\t\t\tI18NHandler:\n\t\t\t\t{\n\t\t\t\t\tdata: {onlyTheseLanguages: options.onlyTheseLanguages},\n\t\t\t\t\tstyle: {minFuncCode: options.minTranslateFuncCode},\n\t\t\t\t\tinsert:\n\t\t\t\t\t{\n\t\t\t\t\t\tcheckClosure: options.isCheckClosureForNewI18NHandler,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tlet files = fileInfo.type == 'list' ? fileInfo.data : [fileInfo.data];\n\t\t\treturn Promise.map(files, function(file)\n\t\t\t\t{\n\t\t\t\t\tdebug('i18n file start: %s', file);\n\n\t\t\t\t\treturn cliUtil.file2i18nc(file, myOptions)\n\t\t\t\t\t\t.then(function(result)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlet newlist = result.allCodeTranslateWords().list4newWordAsts();\n\t\t\t\t\t\t\tlet dirtyWords = result.allDirtyWords();\n\t\t\t\t\t\t\treturn {file: file, newlist: newlist, dirtyWords: dirtyWords};\n\t\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tconcurrency: 5\n\t\t\t\t})\n\t\t\t\t.then(function(results)\n\t\t\t\t{\n\t\t\t\t\tresults.forEach(_printResult);\n\t\t\t\t});\n\t\t});\n}\n\n\nfunction _printResult(item)\n{\n\tif (!item.newlist.length && !item.dirtyWords.list.length)\n\t{\n\t\tconsole.log('  '+cliPrinter.colors.green('ok')+' '+item.file);\n\t}\n\telse\n\t{\n\t\tconsole.log('  '+cliPrinter.colors.red('fail')+' '+item.file);\n\t\tlet output = cliPrinter.printDirtyAndNewWords(item.dirtyWords, item.newlist, 7);\n\n\t\tconsole.log(output);\n\t}\n}\n"],"file":"check-wrap.js"}